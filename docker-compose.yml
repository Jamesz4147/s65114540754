version: '3.8'

services:
  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: iot
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d iot"]
      interval: 5s
      retries: 10
    # ports:
    #   - "20754:5432"
    # networks:
    #   - default
    #   - traefik-public

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: "db"
      DB_USER: "root"
      DB_PASSWORD: "root"
      DB_NAME: "iot"
      DB_PORT: "5432"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/65114540754`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    restart: unless-stopped
    networks:
      - default
      - traefik-public

  # myapp:
  #   build: ./myapp
  #   container_name: myapp
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     REACT_NATIVE_PACKAGER_HOSTNAME: "0.0.0.0"
  #     CHOKIDAR_USEPOLLING: "1"
  #   restart: unless-stopped

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - "--api.insecure=true"            
      - "--providers.docker=true"        
      - "--entrypoints.web.address=:80"  
    ports:
      - "80:80"                   
      - "8080:8080"               
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"  
    restart: unless-stopped
    networks:
      - traefik-public

volumes:
  db_data:

networks:
  traefik-public:
    external: true
